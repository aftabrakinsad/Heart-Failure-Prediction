# -*- coding: utf-8 -*-
"""MLP.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EmyHA0mvC1qj9BzEWrkBn6S5hPTYZQjK
"""

import time
import numpy as np
import pandas as pd
from sklearn.neural_network import MLPClassifier
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, roc_auc_score

X_train = pd.read_csv('/content/X_train_final.csv')
X_test = pd.read_csv('/content/X_test_processed.csv')
y_train = pd.read_csv('/content/y_train_final.csv').values.ravel()
y_test = pd.read_csv('/content/y_test_processed.csv').values.ravel()

best_mlp = MLPClassifier(
    hidden_layer_sizes=(32, 128, 64),
    learning_rate_init=0.0018364400701105588,
    solver='adam',
    alpha=0,
    max_iter=500,
    batch_size=16,
    random_state=42
)

best_mlp.fit(X_train, y_train)

y_train_pred = best_mlp.predict(X_train)
y_train_pred_proba = best_mlp.predict_proba(X_train)[:, 1]

train_accuracy = accuracy_score(y_train, y_train_pred)
train_precision = precision_score(y_train, y_train_pred)
train_recall = recall_score(y_train, y_train_pred)
train_f1 = f1_score(y_train, y_train_pred)
train_roc_auc = roc_auc_score(y_train, y_train_pred_proba)
train_loss = 1 - train_accuracy

print("\nBest Model Training Results:")
print(f"Accuracy: {train_accuracy*100:.2f}%")
print(f"Precision: {train_precision*100:.2f}%")
print(f"Recall: {train_recall*100:.2f}%")
print(f"F1 Score: {train_f1*100:.2f}%")
print(f"AUC: {train_roc_auc*100:.2f}%")
print(f"Loss: {train_loss:.4f}")

print("\n--- Model Inference Time (Test Set) ---")
start_time_warmup = time.time()
_ = best_mlp.predict(X_test)
end_time_warmup = time.time()
print(f"Warm-up prediction time for {X_test.shape[0]} samples: {(end_time_warmup - start_time_warmup):.4f} seconds")

start_time = time.time()
y_test_pred = best_mlp.predict(X_test)
end_time = time.time()
inference_time = end_time - start_time

y_test_pred_proba = best_mlp.predict_proba(X_test)[:, 1]

test_accuracy = accuracy_score(y_test, y_test_pred)
test_precision = precision_score(y_test, y_test_pred)
test_recall = recall_score(y_test, y_test_pred)
test_f1 = f1_score(y_test, y_test_pred)
test_roc_auc = roc_auc_score(y_test, y_test_pred_proba)
test_loss = 1 - test_accuracy

print("\nBest Model Test Results:")
print(f"Accuracy: {test_accuracy*100:.2f}%")
print(f"Precision: {test_precision*100:.2f}%")
print(f"Recall: {test_recall*100:.2f}%")
print(f"F1 Score: {test_f1*100:.2f}%")
print(f"AUC: {test_roc_auc*100:.2f}%")
print(f"Loss: {test_loss:.4f}%")
print(f"Model Inference Time: {inference_time:.4f} seconds")
print(f"Average inference time per sample: {(inference_time / X_test.shape[0] * 1000):.4f} ms/sample")